{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/ChakraUI/reactjsByThapaTechnical/src/components/weather/temp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Weathercard from \"./weathercard\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Temp = () => {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\"pune\");\n  const [tempInfo, setTempInfo] = useState({});\n\n  const getWeatherInfo = async () => {\n    try {\n      //let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=199052e6bfa80235b215a7889ead9757`;\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=199052e6bfa80235b215a7889ead9757`;\n      let res = await fetch(url);\n      let data = await res.json();\n      console.log(data);\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weathermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search...\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getWeatherInfo,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weathercard, { ...tempInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Temp, \"OZCsA3oARrOQf8UFg5D/gvGjDN0=\");\n\n_c = Temp;\nexport default Temp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/ChakraUI/reactjsByThapaTechnical/src/components/weather/temp.js"],"names":["React","useState","useEffect","Weathercard","Temp","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","url","res","fetch","data","json","console","log","temp","humidity","pressure","main","weathermood","weather","name","speed","wind","country","sunset","sys","myNewWeatherInfo","error","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,aAAP;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAD,CAA9C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,cAAc,GAAG,YAAY;AACjC,QAAI;AACF;AACA,UAAIC,GAAG,GAAI,qDAAoDL,WAAY,sDAA3E;AAGA,UAAIM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,UAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,YAAM;AAAEI,QAAAA,IAAF;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA;AAAlB,UAA+BN,IAAI,CAACO,IAA1C;AACA,YAAM;AAAEA,QAAAA,IAAI,EAAEC;AAAR,UAAwBR,IAAI,CAACS,OAAL,CAAa,CAAb,CAA9B;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAWV,IAAjB;AACA,YAAM;AAAEW,QAAAA;AAAF,UAAYX,IAAI,CAACY,IAAvB;AACA,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAsBd,IAAI,CAACe,GAAjC;AAEA,YAAMC,gBAAgB,GAAG;AACvBZ,QAAAA,IADuB;AAEvBC,QAAAA,QAFuB;AAGvBC,QAAAA,QAHuB;AAIvBE,QAAAA,WAJuB;AAKvBE,QAAAA,IALuB;AAMvBC,QAAAA,KANuB;AAOvBE,QAAAA,OAPuB;AAQvBC,QAAAA;AARuB,OAAzB;AAWAnB,MAAAA,WAAW,CAACqB,gBAAD,CAAX;AACD,KA3BD,CA2BE,OAAOC,KAAP,EAAc;AACdf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD;AACF,GA/BD;;AAiCA5B,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,WAFd;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,EAAE,EAAC,QAJL;AAKE,UAAA,SAAS,EAAC,YALZ;AAME,UAAA,KAAK,EAAEJ,WANT;AAOE,UAAA,QAAQ,EAAG0B,CAAD,IAAOzB,cAAc,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAPjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAExB,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,WAAD,OAAiBF;AAAjB;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA2BD,CApED;;GAAMH,I;;KAAAA,I;AAsEN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Weathercard from \"./weathercard\";\nimport \"./style.css\";\n\nconst Temp = () => {\n  const [searchValue, setSearchValue] = useState(\"pune\");\n  const [tempInfo, setTempInfo] = useState({});\n\n  const getWeatherInfo = async () => {\n    try {\n      //let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=199052e6bfa80235b215a7889ead9757`;\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=199052e6bfa80235b215a7889ead9757`;\n     \n\n      let res = await fetch(url);\n      let data = await res.json();\n      console.log(data)\n\n      const { temp, humidity, pressure } = data.main;\n      const { main: weathermood } = data.weather[0];\n      const { name } = data;\n      const { speed } = data.wind;\n      const { country, sunset } = data.sys;\n\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset,\n      };\n\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n\n  return (\n    <>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input\n            type=\"search\"\n            placeholder=\"search...\"\n            autoFocus\n            id=\"search\"\n            className=\"searchTerm\"\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n          />\n\n          <button\n            className=\"searchButton\"\n            type=\"button\"\n            onClick={getWeatherInfo}>\n            Search\n          </button>\n        </div>\n      </div>\n\n      {/* our temp card  */}\n      <Weathercard {...tempInfo} />\n    </>\n  );\n};\n\nexport default Temp;\n"]},"metadata":{},"sourceType":"module"}